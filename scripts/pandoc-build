#!/bin/bash

#set -x
set -e

# Specify formats as a csv to override
if [ "$#" -ge 1 ];then
  IFS=',' read -ra FORMATS <<< "$@"
else
  # Default to all supported formats
  FORMATS=(html pdf epub docx odt plain)
fi
# See https://www.garrickadenbuie.com/blog/pandoc-syntax-highlighting-examples/
# for highlight style samples
# builtin styles:
# pygments tango espresso zenburn kate
# monochrome breezedark haddock
CODE_HIGHLIGHT_STYLE=tango

BIB_FORMAT_CSL=ieee-with-url

# This will generate speech translations. See
#   audio/README.md
EMBED_AUDIO=true

# See pandoc documentation
# https://pandoc.org/MANUAL.html
# for more details if you want to tweak
pandoc_build()
{

  format=$1

  docs="docs/*.md"

  if [ "${EMBED_AUDIO}" = true ]; then
     docs="tmp/*.md"
     mkdir -p tmp
     for file in docs/*.md; do
        audio_str=$(cat << EOF
<audio controls="1"> <source src="audio/mp3/$(basename $file).plain.mp3" type="audio/mpeg"></source> </audio>
EOF
)
       sed "0,/^\\(#.*\\)$/s//\\1\\n$(echo $audio_str | sed 's;/;\\/;g')/" $file > tmp/$(basename $file)
     done
  fi

  echo "Generating ${format}"

  # FIXME can this be DRYed up a bit?
  if [ "${format}" == "html" ];then
    pandoc ${docs} --toc \
      --self-contained \
      --top-level-division=chapter \
      --metadata date="$( date +'%D %X %Z')" \
      --metadata link-citations=true \
      --bibliography=bibliography.yaml \
      --csl "${BIB_FORMAT_CSL}.csl" \
      --template=./templates/GitHub.html5 \
      --filter pandoc-crossref \
      --filter pandoc-citeproc \
      --filter pandoc-include-code -s --highlight-style ${CODE_HIGHLIGHT_STYLE} \
      -o output/doc.${format}

  elif [ "${format}" == "pdf" ];then
    pandoc ${docs} --toc \
      --top-level-division=chapter \
      --metadata date="$( date +'%D %X %Z')" \
      --metadata link-citations=true \
      --bibliography=bibliography.yaml \
      --csl "${BIB_FORMAT_CSL}.csl" \
      --filter pandoc-crossref \
      --filter pandoc-citeproc \
      --filter pandoc-include-code -s --highlight-style ${CODE_HIGHLIGHT_STYLE} \
      -o output/doc.${format}
  elif [ "${format}" == "plain" ];then
     mkdir -p output/plain
     for file in ${docs}; do
        pandoc $file \
          -t ${format} \
          --filter pandoc-crossref \
          -o "output/plain/$(basename $file).plain"
     done
  else
     pandoc ${docs} --toc \
      --top-level-division=chapter \
      --metadata date="$( date +'%D %X %Z')" \
      --metadata link-citations=true \
      --bibliography=bibliography.yaml \
      --csl "${BIB_FORMAT_CSL}.csl" \
      -t ${format} \
      --filter pandoc-crossref \
      --filter pandoc-citeproc \
      --filter pandoc-include-code -s --highlight-style ${CODE_HIGHLIGHT_STYLE} \
      -o output/doc.${format}
  fi
}

mkdir -p output

for format in "${FORMATS[@]}";do
  time pandoc_build ${format}
  rm -rf tmp
done

